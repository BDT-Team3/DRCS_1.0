services:
  postgres:
    image: postgres:14
    container_name: california_db
    restart: always
    environment:
      POSTGRES_USER: gruppo3
      POSTGRES_PASSWORD: gruppo3
      POSTGRES_DB: california_db
    ports:
      - "5433:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gruppo3"]
      interval: 5s
      timeout: 5s
      retries: 5

  init_db:
    build:
      context: .
    container_name: init_db
    command: ["./entrypoint.sh"]
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

  stream_macro1:
    build: .
    command: ["python", "stream_macro1.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro1

  stream_macro2:
    build: .
    command: ["python", "stream_macro2.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro2

  stream_macro3:
    build: .
    command: ["python", "stream_macro3.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro3

  stream_macro4:
    build: .
    command: ["python", "stream_macro4.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro4

  stream_macro5:
    build: .
    command: ["python", "stream_macro5.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro5

  stream_macro6:
    build: .
    command: ["python", "stream_macro6.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro6

  stream_macro7:
    build: .
    command: ["python", "stream_macro7.py"]
    depends_on:
      postgres:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: on-failure
    container_name: stream_macro7
