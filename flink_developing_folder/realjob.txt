
-- Switch to default catalog to create Kafka sources
USE CATALOG default_catalog;

-- Step 2: Kafka sources
CREATE TABLE iot_input (
  station_id STRING,
  ts TIMESTAMP(3),
  measurements ROW<
    temperature_c DOUBLE,
    humidity_percent DOUBLE,
    co2_ppm DOUBLE,
    pm25_ugm3 DOUBLE,
    smoke_index DOUBLE,
    infrared_intensity DOUBLE,
    battery_voltage DOUBLE
  >,
  WATERMARK FOR ts AS ts - INTERVAL '5' SECOND
) WITH (
  'connector' = 'kafka',
  'topic' = 'sensor_meas',
  'properties.bootstrap.servers' = 'kafka:9092',
  'properties.group.id' = 'flink-iot-consumer',
  'scan.startup.mode' = 'latest-offset',
  'format' = 'json',
  'json.timestamp-format.standard' = 'ISO-8601'
);

CREATE TABLE sat_input (
  image_pointer STRING,
  ts TIMESTAMP(3),
  bands ROW<
    B2 DOUBLE,
    B3 DOUBLE,
    B4 DOUBLE,
    B8 DOUBLE,
    B8A DOUBLE,
    B11 DOUBLE,
    B12 DOUBLE
  >,
  WATERMARK FOR ts AS ts - INTERVAL '10' SECOND
) WITH (
  'connector' = 'kafka',
  'topic' = 'satellite_img',
  'properties.bootstrap.servers' = 'kafka:9092',
  'properties.group.id' = 'flink-satimg-consumer',
  'scan.startup.mode' = 'latest-offset',
  'format' = 'json',
  'json.timestamp-format.standard' = 'ISO-8601'
);


-- Step 3: (bronze layer)
CREATE TABLE iot_raw (
  station_id STRING,
  ts TIMESTAMP(3),
  temperature_c DOUBLE,
  humidity_percent DOUBLE,
  co2_ppm DOUBLE,
  pm25_ugm3 DOUBLE,
  smoke_index DOUBLE,
  infrared_intensity DOUBLE,
  battery_voltage DOUBLE
)
PARTITIONED BY (ts)
WITH (
  'connector' = 'filesystem',
  'path' = 's3a://bronze/iot/',
  'format' = 'parquet'
);

CREATE TABLE sat_raw (
  image_pointer STRING,
  ts TIMESTAMP(3),
  B2 DOUBLE,
  B3 DOUBLE,
  B4 DOUBLE,
  B8 DOUBLE,
  B8A DOUBLE,
  B11 DOUBLE,
  B12 DOUBLE
)
PARTITIONED BY (ts)
WITH (
  'connector' = 'filesystem',
  'path' = 's3a://bronze/sat/',
  'format' = 'parquet'
);


-- Step 4: Align to 1-minute tumbling window and persist
INSERT INTO iot_raw
SELECT
  station_id,
  TUMBLE_START(ts, INTERVAL '1' MINUTE) AS ts,
  temperature_c,
  humidity_percent,
  co2_ppm,
  pm25_ugm3,
  smoke_index,
  infrared_intensity,
  battery_voltage
FROM (
  SELECT
    station_id,
    ts,
    measurements.temperature_c AS temperature_c,
    measurements.humidity_percent AS humidity_percent,
    measurements.co2_ppm AS co2_ppm,
    measurements.pm25_ugm3 AS pm25_ugm3,
    measurements.smoke_index AS smoke_index,
    measurements.infrared_intensity AS infrared_intensity,
    measurements.battery_voltage AS battery_voltage
  FROM iot_input
)
GROUP BY
  station_id,
  TUMBLE(ts, INTERVAL '1' MINUTE),
  temperature_c,
  humidity_percent,
  co2_ppm,
  pm25_ugm3,
  smoke_index,
  infrared_intensity,
  battery_voltage;


INSERT INTO sat_raw
SELECT
  image_pointer,
  TUMBLE_START(ts, INTERVAL '1' MINUTE) AS ts,
  B2,
  B3,
  B4,
  B8,
  B8A,
  B11,
  B12
FROM (
  SELECT 
    image_pointer,
    TUMBLE_START(ts, INTERVAL '1' MINUTE) AS ts,
    bands.B2 AS B2,
    bands.B3 AS B3,
    bands.B4 AS B4,
    bands.B8 AS B8,
    bands.B8A AS B8A,
    bands.B11 AS B11,
    bands.B12 AS B12
  FROM sat_input
)
GROUP BY
  image_pointer,
  TUMBLE_START(ts, INTERVAL '1' MINUTE) AS ts,
  B2,
  B3,
  B4,
  B8,
  B8A,
  B11,
  B12;

